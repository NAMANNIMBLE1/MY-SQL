-- Create database if it does not exist and use it
drop database if exists college;
CREATE DATABASE college;
USE college;

-- Drop tables if they exist
DROP TABLE IF EXISTS students;
DROP TABLE IF EXISTS dept;
DROP TABLE IF EXISTS teacher;

-- Create students table
CREATE TABLE students (
    rollno INT PRIMARY KEY,
    name VARCHAR(50),
    marks INT NOT NULL,
    grade VARCHAR(1),
    city VARCHAR(20)
);

-- Create department table
CREATE TABLE dept (
    id INT PRIMARY KEY,
    name VARCHAR(50)
);

-- Create teacher table with foreign key constraint to dept
CREATE TABLE teacher (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES dept(id)
);

-- Insert data into students table
INSERT INTO students (rollno, name, marks, grade, city)
VALUES
(101, 'naman nimble', 99, 'A', 'khera khurd'),
(102, 'vaibhav nimble', 80, 'A', 'balawala'),
(103, 'ansh kaim', 96, 'A', 'laxmi nagar'),
(104, 'tushar kaim', 50, 'A', 'mandawli');

-- Insert data into department table
INSERT INTO dept (id, name)
VALUES
(1, 'Computer Science'),
(2, 'Mathematics'),
(3, 'Physics');

-- Insert data into teacher table
INSERT INTO teacher (id, name, dept_id)
VALUES
(201, 'John Smith', 1),
(202, 'Jane Doe', 2),
(203, 'Alice Johnson', 3);




-- cascading foreign keys 

-- Create database if it does not exist and use it
CREATE DATABASE IF NOT EXISTS college;
USE college;

-- Drop tables if they exist
DROP TABLE IF EXISTS students;
DROP TABLE IF EXISTS dept;
DROP TABLE IF EXISTS teacher;

-- Create students table
CREATE TABLE students (
    rollno INT PRIMARY KEY,
    name VARCHAR(50),
    marks INT NOT NULL,
    grade VARCHAR(1),
    city VARCHAR(20)
);

-- Create department table and insert initial values
CREATE TABLE dept (
    id INT PRIMARY KEY,
    name VARCHAR(50)
);

INSERT INTO dept (id, name) VALUES
(101, 'English'),
(102, 'Hindi');

-- Update a department record
UPDATE dept 
SET id = 103
WHERE id = 102;

-- Verify the department table
SELECT * FROM dept;

-- Create teacher table with foreign key constraint to dept
CREATE TABLE teacher (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES dept(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

-- Insert data into teacher table (Note: Ensure dept_id exists in dept table)
INSERT INTO teacher (id, name, dept_id)
VALUES
(200, 'Naman Nimble', 101),
(500, 'Akshay', 103); -- Use existing dept_id from dept table

-- Verify the teacher table
SELECT * FROM teacher;

-- Insert data into students table
INSERT INTO students (rollno, name, marks, grade, city)
VALUES
(101, 'Naman Nimble', 99, 'A', 'Khera Khurd'),
(102, 'Vaibhav Nimble', 80, 'A', 'Balawala'),
(103, 'Ansh Kaim', 96, 'A', 'Laxmi Nagar'),
(104, 'Tushar Kaim', 50, 'A', 'Mandawli');

-- Insert additional data into department table
INSERT INTO dept (id, name)
VALUES
(1, 'Computer Science'),
(2, 'Mathematics'),
(3, 'Physics');

-- Insert additional data into teacher table
INSERT INTO teacher (id, name, dept_id)
VALUES
(201, 'John Smith', 1),
(202, 'Jane Doe', 2),
(203, 'Alice Johnson', 3);

-- Verify the students table
SELECT * FROM students;

-- Verify the updated department table
SELECT * FROM dept;

-- Verify the updated teacher table
SELECT * FROM teacher;
